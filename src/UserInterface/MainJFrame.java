/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.LinkNode;
import Business.Queue;
import Business.ServletRequest;
import java.awt.Color;
import java.awt.Font;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sonam
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private Queue servletQueue;
    private JLabel[] labels=new JLabel[5];
    private JLabel[] servlets= new JLabel[5];
    private int noOfReqProcessed=0;
    
    public MainJFrame() {
        initComponents();
        createLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        numberOfSecondsJTextField = new javax.swing.JTextField();
        startJButton = new javax.swing.JButton();
        resetJButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblnoReqAdded = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        noServletsJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        noReqAdded = new javax.swing.JLabel();
        noReqProcessed = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        avgTimeJLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        avgWaitingTime = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        servletHeadJLabel = new javax.swing.JLabel();
        servletTailJLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Number of Seconds:");

        startJButton.setText("Start");
        startJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startJButtonActionPerformed(evt);
            }
        });

        resetJButton.setText("Reset");
        resetJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Servlet Queue");

        jLabel9.setText("Servlet");

        lblnoReqAdded.setText("Number of Requests added this second:");

        jLabel2.setText("Number Of Servlets:");

        jLabel3.setText("(Maximum 5)");

        jLabel4.setText("Total Number of Requests processed:");

        noReqAdded.setText("0");

        noReqProcessed.setText("0");

        jLabel5.setText("Average time per request:");

        avgTimeJLabel.setText("0");

        jLabel6.setText("Average waiting time this second:");

        avgWaitingTime.setText("0");

        jLabel7.setText("Head");

        jLabel10.setText("Tail");

        servletHeadJLabel.setText("NULL");

        servletTailJLabel.setText("NULL");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 51, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Web Application Traffic Simulation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblnoReqAdded, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(noReqAdded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(noReqProcessed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(avgTimeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(avgWaitingTime, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(startJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numberOfSecondsJTextField)
                                    .addComponent(resetJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(noServletsJTextField))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(131, 131, 131)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(servletHeadJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)))))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(servletTailJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(290, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numberOfSecondsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(noServletsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startJButton)
                    .addComponent(resetJButton))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 227, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servletHeadJLabel)
                    .addComponent(servletTailJLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnoReqAdded)
                    .addComponent(noReqAdded))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(noReqProcessed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(avgWaitingTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(avgTimeJLabel))
                .addGap(55, 55, 55))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startJButtonActionPerformed
        // TODO add your handling code here:
        int numberOfSeconds = 1;
        int numberOfActiveQueues=1;
        try {
            numberOfSeconds = Integer.parseInt(numberOfSecondsJTextField.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please enter a valid integer", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            numberOfActiveQueues = Integer.parseInt(noServletsJTextField.getText());
            if(numberOfActiveQueues>5)
            {
                JOptionPane.showMessageDialog(this, "Please enter a valid integer up to 5", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please enter a valid integer", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.servletQueue = new Queue();
        startJButton.setEnabled(false);
        for (int i = 1; i <= numberOfSeconds; i++) {
            generateRequests();
            processRequest(numberOfActiveQueues);
            displayLabels();
            JOptionPane.showMessageDialog(null,"Continue?");
        }
        double avgTimePerReq= (float)numberOfSeconds/noOfReqProcessed;
        avgTimeJLabel.setText(String.format("%f",avgTimePerReq));
        resetJButton.setEnabled(true);
    }//GEN-LAST:event_startJButtonActionPerformed

    private void resetJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetJButtonActionPerformed
        // TODO add your handling code here:
        resetJButton.setEnabled(false);
        servletQueue=new Queue();
        noOfReqProcessed=0;
        displayLabels();
        processRequest(0);
        noReqAdded.setText("0");
        noReqProcessed.setText("0");
        avgTimeJLabel.setText("0");
        avgWaitingTime.setText("0");
        startJButton.setEnabled(true);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_resetJButtonActionPerformed

    
    private void generateRequests() {
        //Generate and Add new requests
        Random rand = new Random();
        int requestNumber = rand.nextInt(4);
        
        for (int i = 0; i < requestNumber; i++) {
            ServletRequest sr = new ServletRequest();
            servletQueue.enqueue(sr.getRequestId());
        }
        noReqAdded.setText(String.valueOf(requestNumber));
    }

    private void processRequest(int activeServlets) {
        //Dequeue requests
        double avgWaitTime=0;
        for(int i=0;i<activeServlets;i++)
        {
            LinkNode request = servletQueue.dequeue();
            if (request != null) {
                servlets[i].setText(String.valueOf(request.getNodeData()));
                noOfReqProcessed++;
            } else {
                servlets[i].setText("Free");
            }
        }
        
        if(!servletQueue.isEmpty())
        {
             try
            {
            avgWaitTime=((float)(servletQueue.getTail().getNodeData()- servletQueue.getHead().getNodeData())/activeServlets);
            }
            catch(Exception ex)
            {
                avgWaitTime=0;
            }
        }
        else
        {
            avgWaitTime=0;
        }
        
        avgWaitingTime.setText(String.format("%f",avgWaitTime));
        noReqProcessed.setText(String.valueOf(noOfReqProcessed));
        
        for(int i=activeServlets;i<5;i++)
        {
            servlets[i].setText("Not in use");
        }
    }
    
    private void displayLabels()
    {
        LinkNode current=servletQueue.getHead();
        for(int i=0;i<5;i++)
        {
            if(current!=null)
            {
                labels[i].setText(String.valueOf(current.getNodeData()));
                current= current.getNext();
            }
            else
            {
                labels[i].setText("Empty");
            }
        }
        
        if(servletQueue.getHead()!=null)
        {
            servletHeadJLabel.setText(String.valueOf(servletQueue.getHead().getNodeData()));
        }
        else
        {
            servletHeadJLabel.setText("NULL");
        }
        
        if(servletQueue.getTail()!=null)
        {
            servletTailJLabel.setText(String.valueOf(servletQueue.getTail().getNodeData()));
        }
        else
        {
            servletTailJLabel.setText("NULL");
        }
        revalidate();
        this.repaint();        
    }
    
    private void createLabels()
    {
        //Create labels to display queue and servlets
        int x=290;
        int y=260;
        int x1=415;
        int y1=200;
        Font newLabelFont=new Font("Tahoma",Font.BOLD,13);
        for(int i=0;i<5;i++)
            {
                JLabel lbl= new JLabel("Empty");
                lbl.setBounds(x, y, 50, 25);
                lbl.setVisible(true);
                lbl.setForeground(Color.red);
                lbl.setFont(newLabelFont);
                labels[i]=lbl;
                this.add(lbl);
                x=x-60;
                
                JLabel lbl1= new JLabel("Free");
                lbl1.setBounds(x1, y1, 80, 25);
                lbl1.setVisible(true);
                lbl1.setForeground(Color.BLUE);
                lbl1.setFont(newLabelFont);
                servlets[i]=lbl1;
                this.add(lbl1);
                y1=y1+40;
            }
        validate();
        repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avgTimeJLabel;
    private javax.swing.JLabel avgWaitingTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblnoReqAdded;
    private javax.swing.JLabel noReqAdded;
    private javax.swing.JLabel noReqProcessed;
    private javax.swing.JTextField noServletsJTextField;
    private javax.swing.JTextField numberOfSecondsJTextField;
    private javax.swing.JButton resetJButton;
    private javax.swing.JLabel servletHeadJLabel;
    private javax.swing.JLabel servletTailJLabel;
    private javax.swing.JButton startJButton;
    // End of variables declaration//GEN-END:variables
}
